-- MySQL Script generated by MySQL Workbench
-- Tue Feb 25 10:44:25 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema GoodVibes
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `GoodVibes` ;

-- -----------------------------------------------------
-- Schema GoodVibes
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `GoodVibes` DEFAULT CHARACTER SET utf8 ;
USE `GoodVibes` ;

-- -----------------------------------------------------
-- Table `GoodVibes`.`Player`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GoodVibes`.`Player` ;

CREATE TABLE IF NOT EXISTS `GoodVibes`.`Player` (
  `idPlayer` INT NOT NULL AUTO_INCREMENT,
  `clawmail` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `readAgreement` VARCHAR(3) NOT NULL DEFAULT 'no',
  `isBanned` VARCHAR(3) NOT NULL DEFAULT 'no',
  `appThemePreference` INT NOT NULL DEFAULT 0,
  `userType` VARCHAR(10) NOT NULL,
  `rating` INT ZEROFILL NOT NULL DEFAULT 00000,
  `creationDate` DATE NOT NULL,
  `banDate` DATE NULL,
  PRIMARY KEY (`idPlayer`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `clawmail_UNIQUE` ON `GoodVibes`.`Player` (`clawmail` ASC) ;

CREATE UNIQUE INDEX `idPlayer_UNIQUE` ON `GoodVibes`.`Player` (`idPlayer` ASC) ;

CREATE INDEX `userType_idx` ON `GoodVibes`.`Player` (`userType` ASC) ;


-- -----------------------------------------------------
-- Table `GoodVibes`.`Dorm`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GoodVibes`.`Dorm` ;

CREATE TABLE IF NOT EXISTS `GoodVibes`.`Dorm` (
  `idDorm` INT NOT NULL AUTO_INCREMENT,
  `idPlayer` INT NOT NULL,
  `pcPrefab` INT NOT NULL DEFAULT 1,
  `floorPrefab` INT NOT NULL DEFAULT 1,
  `deskPrefab` INT NOT NULL DEFAULT 1,
  `wall1Prefab` INT NOT NULL DEFAULT 1,
  `wall2Prefab` INT NOT NULL DEFAULT 1,
  `wall3Prefab` INT NOT NULL DEFAULT 1,
  `wall4Prefab` INT NOT NULL DEFAULT 1,
  `bedPrefab` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`idDorm`),
  CONSTRAINT `idPlayerDorm`
    FOREIGN KEY (`idPlayer`)
    REFERENCES `GoodVibes`.`Player` (`idPlayer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idDorm_UNIQUE` ON `GoodVibes`.`Dorm` (`idDorm` ASC) ;

CREATE UNIQUE INDEX `idPlayerDorm_UNIQUE` ON `GoodVibes`.`Dorm` (`idPlayer` ASC) ;


-- -----------------------------------------------------
-- Table `GoodVibes`.`Vibe`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GoodVibes`.`Vibe` ;

CREATE TABLE IF NOT EXISTS `GoodVibes`.`Vibe` (
  `idVibe` INT NOT NULL AUTO_INCREMENT,
  `idPlayer` INT NOT NULL,
  `isVisible` VARCHAR(3) NOT NULL DEFAULT 'yes',
  `subject` VARCHAR(20) NOT NULL,
  `message` VARCHAR(500) NOT NULL,
  `timesReported` INT NOT NULL DEFAULT 0,
  `vibeType` VARCHAR(5) NOT NULL,
  `numberOfReplies` INT NOT NULL DEFAULT 0,
  `vibeTopic` INT NULL,
  `dateCreated` DATE NOT NULL,
  `userClosed` VARCHAR(3) NOT NULL DEFAULT 'no',
  PRIMARY KEY (`idVibe`),
  CONSTRAINT `idPlayerVibe`
    FOREIGN KEY (`idPlayer`)
    REFERENCES `GoodVibes`.`Player` (`idPlayer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `idVibe_UNIQUE` ON `GoodVibes`.`Vibe` (`idVibe` ASC) ;

CREATE UNIQUE INDEX `idPlayerVibe_UNIQUE` ON `GoodVibes`.`Vibe` (`idPlayer` ASC) ;

USE `GoodVibes` ;

-- -----------------------------------------------------
-- Placeholder table for view `GoodVibes`.`SentPersonalTopicVibes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GoodVibes`.`SentPersonalTopicVibes` (`id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `GoodVibes`.`PublicTopicVibes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GoodVibes`.`PublicTopicVibes` (`id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `GoodVibes`.`ReplyVibes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GoodVibes`.`ReplyVibes` (`id` INT);

-- -----------------------------------------------------
-- View `GoodVibes`.`SentPersonalTopicVibes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GoodVibes`.`SentPersonalTopicVibes`;
DROP VIEW IF EXISTS `GoodVibes`.`SentPersonalTopicVibes` ;
USE `GoodVibes`;
CREATE OR REPLACE VIEW `SentPersonalTopicVibes` AS 
(SELECT idPlayer, subject, message, numberOfReplies FROM Vibe WHERE vibeType = 'Topic' ORDER BY dateCreated);

-- -----------------------------------------------------
-- View `GoodVibes`.`PublicTopicVibes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GoodVibes`.`PublicTopicVibes`;
DROP VIEW IF EXISTS `GoodVibes`.`PublicTopicVibes` ;
USE `GoodVibes`;
CREATE OR REPLACE VIEW `PublicTopicVibes` AS 
(SELECT subject, message FROM Vibe WHERE isVisible = 'yes' AND userClosed = 'no' AND vibeType = 'Topic' ORDER BY dateCreated, RAND() LIMIT 10);

-- -----------------------------------------------------
-- View `GoodVibes`.`ReplyVibes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GoodVibes`.`ReplyVibes`;
DROP VIEW IF EXISTS `GoodVibes`.`ReplyVibes` ;
USE `GoodVibes`;
CREATE OR REPLACE VIEW `ReplyVibes` AS 
(SELECT idPlayer, vibeTopic, message FROM Vibe WHERE isVisible = 'yes' AND vibeType = 'Reply' ORDER BY dateCreated);

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
